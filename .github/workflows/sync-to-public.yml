name: Sync to Public Repository

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Premium Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Remove Premium Content
        run: |
          echo "🔍 Removing premium content before sync..."
          
          # Remove premium demo pages
          if [ -d "app/premium" ]; then
            rm -rf app/premium
            echo "  ✅ Removed app/premium/"
          fi
          
          # Remove premium components and hooks
          if [ -d "lib/premium" ]; then
            rm -rf lib/premium
            echo "  ✅ Removed lib/premium/"
          fi
          
          # Remove internal scripts (but keep the workflow itself!)
          for script in migrate-to-premium.js repo-status.js backup-state.js reorganize-premium.js consolidate-premium.js fix-imports.js; do
            if [ -f "scripts/$script" ]; then
              rm -f "scripts/$script"
              echo "  ✅ Removed scripts/$script"
            fi
          done
          
          # Remove premium-specific files (but NOT the sync workflow!)
          if [ -f ".github/premium-files.txt" ]; then
            rm -f .github/premium-files.txt
            echo "  ✅ Removed .github/premium-files.txt"
          fi
          
          # Remove backup directory if exists
          if [ -d "backups" ]; then
            rm -rf backups
            echo "  ✅ Removed backups/"
          fi
          
          echo "✅ Premium content removed"
      
      - name: Push to Public Repository
        env:
          PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        run: |
          echo "📤 Syncing to public repository..."
          
          # Check if public remote already exists
          if git remote | grep -q "public"; then
            echo "  ℹ️ Public remote already exists"
            git remote set-url public https://x-access-token:${PUBLIC_REPO_TOKEN}@github.com/zanganeh/catalyst-studio.git
          else
            echo "  ➕ Adding public remote"
            git remote add public https://x-access-token:${PUBLIC_REPO_TOKEN}@github.com/zanganeh/catalyst-studio.git
          fi
          
          # Fetch the current state of public repo
          git fetch public main || echo "  ℹ️ Public repo might be empty"
          
          # Create or switch to sync branch
          git checkout -B public-sync
          
          # Stage all changes
          git add -A
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "  ℹ️ No changes to sync"
          else
            # Commit the changes
            git commit -m "chore: sync from premium - $(date +'%Y-%m-%d %H:%M:%S')" \
              -m "Premium features excluded from this sync" \
              -m "Source: catalyst-studio-premium"
            echo "  ✅ Changes committed"
          fi
          
          # Push to public repo (force to overwrite)
          git push public public-sync:main --force
          
          echo "✅ Successfully synced to public repository!"
      
      - name: Generate Summary
        if: always()
        run: |
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ **Successfully synced to public repository**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Sync failed - check logs**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- **Source**: \`catalyst-studio-premium\` (private)" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: \`catalyst-studio\` (public)" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`main\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Premium Content Excluded:" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 \`app/premium/\` - Premium demo applications" >> $GITHUB_STEP_SUMMARY
          echo "  - Import/Export features" >> $GITHUB_STEP_SUMMARY
          echo "  - Sitemap Builder" >> $GITHUB_STEP_SUMMARY
          echo "  - Style Guide" >> $GITHUB_STEP_SUMMARY
          echo "  - Wireframe tools" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 \`lib/premium/\` - Premium libraries" >> $GITHUB_STEP_SUMMARY
          echo "  - Premium components (\`components/\`)" >> $GITHUB_STEP_SUMMARY
          echo "  - Premium hooks (\`hooks/\`)" >> $GITHUB_STEP_SUMMARY
          echo "  - Premium utilities" >> $GITHUB_STEP_SUMMARY
          echo "- 📜 Internal migration scripts" >> $GITHUB_STEP_SUMMARY
          echo "- 📁 Backup directories" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Sync Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔒 Premium features remain private in \`catalyst-studio-premium\`" >> $GITHUB_STEP_SUMMARY